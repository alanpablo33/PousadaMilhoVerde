/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package TelasDoPrograma;

import Classes.Cliente;
import Classes.Reserva;
import java.io.IOException;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Alan Pablo
 */
public class TelaMetodosDeOrdenação extends javax.swing.JInternalFrame {

    /**
     * Creates new form TelaMetodosDeOrdenação
     */
    public TelaMetodosDeOrdenação() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        BotaoOrdenarReserva = new javax.swing.JButton();
        BotaoOrdenarClientes = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        MostarOrdenacao = new javax.swing.JTextPane();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Metodos De Ordenação");

        jLabel1.setText("Metodos de Ordenação");

        BotaoOrdenarReserva.setText("Ordenar Reserva");
        BotaoOrdenarReserva.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoOrdenarReservaActionPerformed(evt);
            }
        });

        BotaoOrdenarClientes.setText("Ordenar Cliente");
        BotaoOrdenarClientes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoOrdenarClientesActionPerformed(evt);
            }
        });

        jScrollPane1.setViewportView(MostarOrdenacao);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BotaoOrdenarReserva)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(BotaoOrdenarClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotaoOrdenarReserva)
                    .addComponent(BotaoOrdenarClientes))
                .addGap(30, 30, 30)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 417, Short.MAX_VALUE)
                .addContainerGap())
        );

        setBounds(300, 20, 385, 566);
    }// </editor-fold>//GEN-END:initComponents

    private void BotaoOrdenarReservaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoOrdenarReservaActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder();

        // Antes da ordenação
        sb.append("Antes da Ordenação:").append(System.lineSeparator());
        List<Reserva> listaReserva = arquivos.JsonFerramentas.lerReservas();
        for (Reserva r : listaReserva) {
            sb.append(r.getValorDiaria()).append(System.lineSeparator());
        }

        // Ordenação da lista de reservas
        Collections.sort(listaReserva, new Comparator<Reserva>() {
            @Override
            public int compare(Reserva r1, Reserva r2) {
                // Comparar pelo valor da diária
                return Double.compare(r1.getValorDiaria(), r2.getValorDiaria());
            }
        });

        // Após a ordenação
        sb.append("------------------------------------------------------------").append(System.lineSeparator());
        sb.append("Após a Ordenação:").append(System.lineSeparator());
        for (Reserva r : listaReserva) {
            sb.append(r.getValorDiaria()).append(System.lineSeparator());
        }

        // Exibir resultado na interface
        MostarOrdenacao.setText(sb.toString());
        JOptionPane.showMessageDialog(null, "Ordenacção de Reserva Feita com Base no Valor Final Da Diaria do Cliente");

    }//GEN-LAST:event_BotaoOrdenarReservaActionPerformed

    private void BotaoOrdenarClientesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoOrdenarClientesActionPerformed
        // TODO add your handling code here:
        StringBuilder sb = new StringBuilder();

        // Antes da ordenação
        sb.append("Antes da Ordenação:").append(System.lineSeparator());
        try {
            List<Cliente> listaClientes = arquivos.JsonFerramentas.leituraArquivoClientee();
            for (Cliente cliente : listaClientes) {
                sb.append(cliente.getNome()).append(System.lineSeparator());
            }

            // Ordenação da lista de clientes
            Collections.sort(listaClientes, new Cliente());

            // Após a ordenação
            sb.append("-----------------------------------").append(System.lineSeparator());
            sb.append("Após a Ordenação:").append(System.lineSeparator());
            for (Cliente cliente : listaClientes) {
                sb.append(cliente.getNome()).append(System.lineSeparator());
            }

            // Exibir resultado na interface
            MostarOrdenacao.setText(sb.toString());
            JOptionPane.showMessageDialog(null, "Ordenacção de Clientes Feita com Base no Nome do Cliente"); 

        } catch (IOException e) {
            // Tratar a exceção aqui
            e.printStackTrace();
        }
    }//GEN-LAST:event_BotaoOrdenarClientesActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotaoOrdenarClientes;
    private javax.swing.JButton BotaoOrdenarReserva;
    private javax.swing.JTextPane MostarOrdenacao;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
